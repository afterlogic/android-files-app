apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

project.ext.set("signingFolder", file("../signing").toString())
apply from: '../signing/signings.gradle'

android {

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {

        buildConfigField "boolean", "DEBUG_HTTP", "true"

        applicationId "com.afterlogic.aurora.files"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        Properties versionProperties = new Properties()
        File propsFile = new File("$project.rootProject.projectDir/meta/version.properties")
        if(propsFile.exists()) {
            versionProperties.load(new FileInputStream(propsFile))
        } else {
            throw new IllegalStateException(
                    "Version properties file not exist: $propsFile.absolutePath")
        }

        versionCode versionProperties.VERSION_CODE.toInteger()
        versionName versionProperties.VERSION_NAME

        multiDexEnabled true

    }

    dataBinding{

        enabled true

    }

    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

    }

    dexOptions {

        javaMaxHeapSize "2g"
        jumboMode true

    }

    buildTypes {

        release {

            signingConfig signingConfigs.sign
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        debug {

            if (project.hasProperty("debug.nohttp")) {

                buildConfigField "boolean", "DEBUG_HTTP", "false"

            }

            signingConfig signingConfigs.sign
            minifyEnabled false
            ext.enableCrashlytics = false

        }

        releaseBeta {

            signingConfig signingConfigs.sign
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ext.betaDistributionGroupAliases = "aurora-android"
            ext.betaDistributionReleaseNotesFilePath =
                    "$project.rootProject.projectDir/meta/releaseNotes.txt"

        }
    }

    packagingOptions {

        exclude 'META-INF/rxjava.properties'

    }

}

greendao {

    schemaVersion 1

}

kapt {

    generateStubs true

    javacOptions {
        // Increase the max count of errors from annotation processors.
        // Default is 100.
        option("-Xmaxerrs", 500)
    }

}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation deps.androidx.multidex.api
    implementation deps.androidx.multidex.instrumentation

    //For test
    androidTestImplementation(deps.testing.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation deps.testing.junit
    // Optional -- Mockito framework
    testImplementation deps.testing.mockito

    // Kotlin
    implementation deps.kotlin.stdlib
    implementation deps.kotlin.ktx.core

    //Dagger - Dependency Injection
    implementation deps.core.dagger
    kapt deps.core.daggerCompiler
    implementation deps.core.daggerAndroid
    implementation deps.core.daggerAndroidSupport
    kapt deps.core.daggerAndroidProcessor

    //Compat
    implementation deps.androidx.appcompat
    implementation deps.androidx.design
    implementation deps.androidx.recyclerView
    implementation deps.androidx.constraintLayout

    //Observable and Stream
    implementation deps.utils.streams
    implementation deps.rx.java
    implementation deps.rx.android
    implementation deps.rx.modern

    //[START Api helpers]
    implementation deps.network.retrofit
    implementation deps.network.gson
    implementation deps.network.converterScalars
    implementation deps.network.converterGson
    implementation deps.network.rxAdapter
    implementation deps.network.okhttp
    implementation deps.network.logging
    //[END Api helpers]

    //Floating action button
    implementation deps.view.fab
    //Material progress bar
    implementation deps.view.materialProgressBar

    //DB
    implementation deps.greendao.dao

    //EventBus
    implementation deps.greendao.eventbus

    //Pictures load
    implementation deps.network.glide
    implementation deps.view.photoView

    //Preferences
    implementation deps.utils.prefs

    //Crash and use analytics
    implementation(deps.debug.crashlytics) {
        transitive = true
    }

    implementation deps.androidx.constraintLayout

    implementation deps.androidx.lifecycle.runtime
    implementation deps.androidx.lifecycle.extensions
    kapt deps.androidx.lifecycle.compiler

    // Navigation
    implementation deps.utils.cicerone

    implementation deps.dataBinding.lastAdapter

    implementation deps.utils.parceler.api
    kapt deps.utils.parceler.compiler

}